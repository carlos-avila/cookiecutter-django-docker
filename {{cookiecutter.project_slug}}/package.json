{
  "name"           : "{{cookiecutter.project_slug}}",
  "version"        : "0.1.0",
  "description"    : "{{cookiecutter.project_description}}",
  "repository"     : {
    "type": "{{cookiecutter.repository_type}}",
    "url" : "{{cookiecutter.repository_url}}"
  },
  "keywords"       : [],
  "author"         : "{{cookiecutter.project_author}}",
  "devDependencies": {
    "animate-sass"                         : "^0.6.6",
    "autoprefixer"                         : "^6.7.7",
    "babel-core"                           : "^6.24.1",
    "babel-loader"                         : "^6.4.1",
    "babel-plugin-transform-es2015-classes": "^6.24.1",
    "babel-plugin-transform-runtime"       : "^6.23.0",
    "babel-polyfill"                       : "^6.23.0",
    "babel-preset-es2015"                  : "^6.24.1",
    "bootstrap"                            : "^4.0.0-alpha.6",
    "browser-sync"                         : "^2.18.11",
    "css-loader"                           : "^0.27.3",
    "extract-text-webpack-plugin"          : "^2.1.0",
    "file-loader"                          : "^0.10.1",
    "holderjs"                             : "^2.9.4",
    "imports-loader"                       : "^0.6.5",
    "jquery"                               : "^3.2.1",
    "node-sass"                            : "^4.5.2",
    "parallelshell"                        : "^2.0.0",
    "postcss-flexbugs-fixes"               : "^3.0.0",
    "postcss-loader"                       : "^1.3.3",
    "resolve-url-loader"                   : "^2.0.2",
    "sass-loader"                          : "^6.0.5",
    "style-loader"                         : "^0.14.1",
    "tether"                               : "^1.4.0",
    "uglifyjs-webpack-plugin"              : "^0.3.1",
    "url-loader"                           : "^0.5.8",
    "webpack"                              : "^2.5.1"
  },
  "scripts"        : {
    "start"                       : "npm run docker:compose -- up -d",
    "stop"                        : "npm run docker:compose -- down",
    "restart"                     : "npm run stop && npm run start",
    "build"                       : "npm run clean:assets && npm run build:assets && npm run build:docker",
    "build:assets"                : "npm run webpack -- --progress --color",
    "build:docker"                : "docker build -t ${DOCKER_IMAGE} .",
    "watch"                       : "parallelshell 'npm run watch:assets'",
    "watch:assets"                : "npm run webpack -- --colors --watch",
    "watch:static"                : "fswatch -o ${PROJECT_STATIC_ROOT} | xargs -n 1 -I {} npm run docker:django:collectstatic -- --noinput",
    "clean"                       : "npm run clean:assets && npm run clean:docker",
    "clean:docker"                : "npm run clean:docker:containers && npm run clean:docker:dangling && npm run clean:docker:image",
    "clean:docker:all"            : "npm run clean:docker:volumes && npm run clean:docker:containers && npm run clean:docker:dangling && npm run clean:docker:image ",
    "clean:docker:containers"     : "npm run docker:compose -- down && npm run docker:compose -- rm -v",
    "clean:docker:dangling"       : "docker rmi $(docker images -q -f 'dangling=true') 2> /dev/null || true",
    "clean:docker:image"          : "docker rmi $(docker images -q ${DOCKER_IMAGE}) 2> /dev/null || true",
    "clean:docker:volumes"        : "npm run docker:compose -- down -v",
    "clean:assets"                : "npm run clean:assets:webpack",
    "clean:assets:webpack"        : "rm -rf ${WEBPACK_OUTPUT_PATH};",
    "docker:compose"              : "docker-compose -p ${DOCKER_PROJECT_NAME} -f ${DOCKER_COMPOSE_CONFIG} ",
    "docker:django"               : "docker exec -i $(docker ps -q -f \"name=${DOCKER_PROJECT_NAME//-/}_django\")",
    "docker:django:migrate"       : "npm run docker:django -- ./manage.py migrate",
    "docker:django:makemigrations": "npm run docker:django -- ./manage.py makemigrations",
    "docker:django:collectstatic" : "npm run docker:django -- ./manage.py collectstatic",
    "docker:psql"                 : "docker exec -i $(docker ps -q -f \"name=${DOCKER_PROJECT_NAME//-/}_postgres\")",
    "docker:psql:dump"            : "npm run docker:psql -- pg_dumpall -c -U ${DB_USER} > ${PROJECT_SLUG}_`date +%Y-%m-%d\"_\"%H-%M-%S`.sql",
    "webpack"                     : "webpack --config ${WEBPACK_CONFIG}",
    "echo"                        : "echo ${PROJECT_SLUG}:${DOCKER_IMAGE}:${USER}:${PWD}"
  }
}
