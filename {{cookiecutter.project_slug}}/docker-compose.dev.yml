---
version: '3'

services:

  django:
    restart: always
    image: ${DJANGO_DOCKER_IMAGE}
    ports:
      - 8080
    networks:
      - backend
      - frontend
    volumes:
      - ${PROJECT_APP_PATH}:/opt/docker
    environment:
      # Django
      DJANGO_DEBUG:
      DJANGO_SITE_NAME:
      DJANGO_SECRET_KEY:
      DJANGO_SETTINGS_MODULE:
      DJANGO_MEDIA_URL:
      DJANGO_STATIC_URL:
      DJANGO_STATICFILES_STORAGE:
      DJANGO_DEFAULT_FILE_STORAGE:
      DJANGO_HONEYPOT_FIELD_NAME:
      # DB
      DJANGO_DB_NAME:
      DJANGO_DB_USER:
      DJANGO_DB_PASSWORD:
      DJANGO_DB_HOST:
      DJANGO_DB_PORT:
      # Email
      DJANGO_EMAIL_HOST:
      DJANGO_EMAIL_PORT:
      DJANGO_EMAIL_HOST_USER:
      DJANGO_EMAIL_HOST_PASSWORD:
      DJANGO_DEFAULT_FROM_EMAIL:
      # AWS
      DJANGO_AWS_ACCESS_KEY_ID:
      DJANGO_AWS_SECRET_ACCESS_KEY:
      DJANGO_AWS_S3_REGION_NAME:
      DJANGO_AWS_STORAGE_BUCKET_NAME:

  django_publisher:
    restart: always
    image: ${DJANGO_DOCKER_IMAGE}
    command: 'mantra "0 0 * * *" ./manage.py publish_scheduled_pages'
    networks:
      - backend
      - frontend
    volumes:
      - ${PROJECT_APP_PATH}:/opt/docker
    environment:
      # Django
      DJANGO_DEBUG:
      DJANGO_SITE_NAME:
      DJANGO_SECRET_KEY:
      DJANGO_SETTINGS_MODULE:
      DJANGO_MEDIA_URL:
      DJANGO_STATIC_URL:
      DJANGO_STATICFILES_STORAGE:
      DJANGO_DEFAULT_FILE_STORAGE:
      DJANGO_HONEYPOT_FIELD_NAME:
      # DB
      DJANGO_DB_NAME:
      DJANGO_DB_USER:
      DJANGO_DB_PASSWORD:
      DJANGO_DB_HOST:
      DJANGO_DB_PORT:
      # Email
      DJANGO_EMAIL_HOST:
      DJANGO_EMAIL_PORT:
      DJANGO_EMAIL_HOST_USER:
      DJANGO_EMAIL_HOST_PASSWORD:
      DJANGO_DEFAULT_FROM_EMAIL:
      # AWS
      DJANGO_AWS_ACCESS_KEY_ID:
      DJANGO_AWS_SECRET_ACCESS_KEY:
      DJANGO_AWS_S3_REGION_NAME:
      DJANGO_AWS_STORAGE_BUCKET_NAME:

  postgres:
    restart: always
    image: ${POSTGRES_DOCKER_IMAGE}
    ports:
      - 5432
    networks:
      - backend
    volumes:
      - database:/var/lib/postgresql/data:rw
    environment:
      POSTGRES_DB:
      POSTGRES_USER:
      POSTGRES_PASSWORD:

  postgres_backups:
    restart: always
    image: mandelbrew/docker-postgres-s3-backup:3.6
    networks:
      - backend
    environment:
      # AWS
      POSTGRES_AWS_ACCESS_KEY_ID:
      POSTGRES_AWS_DEFAULT_REGION:
      POSTGRES_AWS_S3_BUCKET:
      POSTGRES_AWS_S3_PATH:
      POSTGRES_AWS_SECRET_ACCESS_KEY:
      # DB
      POSTGRES_DB:
      POSTGRES_HOST:
      POSTGRES_PASSWORD:
      POSTGRES_PORT:
      POSTGRES_USER:
      # Schedule
      POSTGRES_CRON_TASK_1: '0 0 * * * sh /opt/docker/backup_postgres_to_s3.sh'

  browser-sync:
    restart: always
    image: mandelbrew/browser-sync:1.1
    ports:
      - 3000
      - 3001
    networks:
      - frontend
    volumes:
      - ${PROJECT_APP_PATH}:/opt/docker:ro
    command: start --no-open --proxy "django:8080" --files "/opt/docker" --reload-delay "1000"

volumes:
  database: {}

networks:
  backend:
  frontend:
